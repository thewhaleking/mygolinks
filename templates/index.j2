<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Example Page</title>
    <style>
        .container {
            display: grid;
            grid-template-columns: 1fr 400px 40px 40px;
            gap: 10px;
            max-width: 700px;
            margin: auto;
        }
        .addContainer {
            display: grid;
            grid-template-columns: 200px 400px 40px;
            gap: 10px;
            max-width: 700px;
            margin: auto;
            justify-items: left;
        }
        .button {
            display: block;
            width: max-content;
            margin: 20px auto;
        }
        .pagination {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        .add-cell {
            display: flex;
            justify-content: center;
            align-content: center;
            padding-bottom: 10px;
        }
        .item-cell {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
        .item-cell:nth-child(odd) {
            background-color: #efefef;
        }
        .url-cell {
            justify-content: start;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 10px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <button id="newButton" class="button">New+</button>
    <div style="display: none" id="addContainer" class="addContainer">
        <div class="add-cell"><label for="short">Short Name</label></div>
        <div class="add-cell"><label for="url">URL</label></div>
        <div class="add-cell"></div>
        <div class="add-cell"><input id="short" style="width: 180px;" type="text" name="short"></div>
        <div class="add-cell"><input id="url" type="url" style="width: 380px;" name="url"></div>
        <div class="add-cell"><button id="addLinkButton">Add</button></div>
    </div>

    <div class="container" id="gridContainer">
    </div>

    <div class="pagination">
        <button id="previousItems" style="display: none" onclick="fetchData(pageNumber - 1)">Previous 50</button>
        <button id="moreItems" style="display: none" onclick="fetchData(pageNumber + 1)">Next 50</button>
    </div>
</body>
<script>
    const shortSelector = document.getElementById("short");
    const urlSelector = document.getElementById("url");
    const addContainer = document.getElementById("addContainer")
    const gridContainer = document.getElementById("gridContainer");
    const prevNumbersButton = document.getElementById("previousItems");
    const moreNumbersButton = document.getElementById("moreItems");

    let pageNumber = 1;
    let moreNumbers = false;
    let previousNumbers = false;

    function editRow(rowId) {
        try {
            const short = document.getElementById(`updateShort-${rowId}`).value;
            const url = document.getElementById(`updateURL-${rowId}`).value;
            const response =  fetch(
                "/edit",
                {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({short: short, url: url, id: rowId}),
                }
            ).then(() => fetchData(pageNumber));
        } catch (e) {
            console.log(`Error updating ${rowId}: ${e}`);
        }
    }

    function deleteRow(rowId) {
        try {
            fetch(
                "/edit",
                {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({id: rowId})
                }
            ).then(() => fetchData(pageNumber));
        } catch (e) {
            console.log(`Error deleting row ${rowId}: ${e}`);
        }
    }

    async function fetchData(page) {
        function generateDivs(row) {
            return `
            <div id="short-${row.id}" class="item-cell">${row.short}</div>
            <div id="url-${row.id}" class="url-cell">${row.url}</div>
            <div class="item-cell">
                <div id="edit-${row.id}" style="display: block">✏️</div>
                <div id="save-${row.id}" style="display: none">✅</div>
            </div>
            <div id="delete-${row.id}" class="item-cell">➖</div>`
        }

        function addHandlers(rowId) {
            document.getElementById(`edit-${rowId}`).addEventListener(
                "click",
                () => {
                    const shortText = document.getElementById(`short-${rowId}`).innerText;
                    const urlText = document.getElementById(`url-${rowId}`).innerText;
                    document.getElementById(`short-${rowId}`).innerHTML = `<input style="width: 180px;" id="updateShort-${rowId}" value="${shortText}">`;
                    document.getElementById(`url-${rowId}`).innerHTML = `<input style="width: 380px;" id="updateURL-${rowId}" value="${urlText}">`;
                    document.getElementById(`edit-${rowId}`).style.display = "none";
                    document.getElementById(`save-${rowId}`).style.display = "block";
                }
            )
            document.getElementById(`save-${rowId}`).addEventListener(
                "click",
                () => editRow(rowId)
            )
            document.getElementById(`delete-${rowId}`).addEventListener(
                "click",
                () => {
                    deleteRow(rowId);
                }
            )
        }

        let pageValue = page || 1;
        let url = `/edit?api=fetch&page=${pageValue}`

        try {
            const response = await fetch(
                url,
                {
                    method: "GET",
                }
            );
            const result = await response.json();
            gridContainer.innerHTML = result.items.map(generateDivs).join("");
            result.items.forEach(
                (x) => addHandlers(x.id)
            );
            moreNumbers = result.moreItems;
            previousNumbers = result.previousItems;
            pageNumber = result.page;
        }
        catch (e) {
            console.log(`Error: ${e}`);
        } finally {
            if (moreNumbers) {
                moreNumbersButton.style.display = "block";
            } else {
                moreNumbersButton.style.display = "none";
            }
            if (previousNumbers) {
                prevNumbersButton.style.display = "block";
            } else {
                prevNumbersButton.style.display = "none";
            }
        }
    }

    document.getElementById("newButton").addEventListener(
        "click",
        () => {
            if (addContainer.style.display === "grid") {
                addContainer.style.display = "none";
            } else {
                addContainer.style.display = "grid";
            }
        }
    );

    document.getElementById("addLinkButton").addEventListener(
        "click",
        () => {
            const short = shortSelector.value;
            const url = urlSelector.value;

            async function addItem() {
                try {
                    const response = await fetch(
                        "/edit",
                        {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({short: short, url: url}),
                        }
                    );
                    const result = await response.json();
                    console.log("Success:", result);
                    shortSelector.value = '';
                    urlSelector.value = '';
                    addContainer.style.display = 'none';
                    await fetchData(pageNumber);
                }
                catch (error) {
                    console.error("Error:", error);
                }
            }
            addItem();
        }
    )

    fetchData(pageNumber);

</script>
</html>
